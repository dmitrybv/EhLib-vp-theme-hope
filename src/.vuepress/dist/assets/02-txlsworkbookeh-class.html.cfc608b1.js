import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as s,f as t}from"./app.ac77cf73.js";const a={},n=t(`<h1 id="txlsworkbookeh-class" tabindex="-1"><a class="header-anchor" href="#txlsworkbookeh-class" aria-hidden="true">#</a> TXlsWorkbookEh class</h1><p>Workbook. <code>TXlsMemFileEh</code> contains one copy of a workbook of type <code>TXlsWorkbookEh</code>. The workbook contains a set of tables (<code>TXlsWorksheetEh</code>) and <code>TXlsFileStylesEh</code> styles. Styles describe the format of the data cells in the <code>Worksheet</code>. Each cell must reference one of the styles from the <code>Styles</code> list. When filling in data in the program code, you do not need to use the <code>TXlsWorkbookEh.Styles</code> property. The inner code of the <code>TXlsMemFileEh</code> class automatically creates styles and style references when the format changes in table cells. You can use <code>TXlsMemFileEh.Workbook</code> property to access <code>TXlsWorkbookEh</code> properties and methods.</p><p>The following <code>TXlsWorkbookEh</code> properties and methods are used to work with work pages (<code>Worksheet</code>):</p><p><code>function AddWorksheet(WorksheetName: string): TXlsWorksheetEh;</code></p><dd>Add a new table (Worksheet) with the specified name.</dd><br><p><code>function FindWorksheet(WorksheetName: string): TXlsWorksheetEh;</code></p><dd>Find a table (Worksheet) by name.</dd><br><p><code>procedure MoveWorksheet(FromIndex, ToIndex: Integer);</code></p><dd>Move the Worksheet from the FromIndex position to the ToIndex position.</dd><br><p><code>procedure RemoveWorksheet(WorksheetEh: TXlsWorksheetEh);</code></p><dd>Delete Worksheet.</dd><br><p><code>property Worksheets[WorksheetId: Variant]: TXlsWorksheetEh;</code></p><dd>Get a ref to a table by name or by index. To get a value by name, pass the table name as a string to the WorksheetId parameter.</dd><br><p><code>property WorksheetCount: Integer;</code></p><dd>Get the number of tables in the Worksheets collection.</dd><br><p>Here is an example of using the Workbook property.</p><div class="language-pascal" data-ext="pascal"><pre class="language-pascal"><code>xlsFile <span class="token operator">:=</span> TXlsMemFileEh<span class="token punctuation">.</span>Create<span class="token punctuation">;</span>
xlsFile<span class="token punctuation">.</span>Workbook<span class="token punctuation">.</span>Worksheets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">Name</span> <span class="token operator">:=</span> <span class="token string">&#39;DBGrid&#39;</span><span class="token punctuation">;</span>
xlsFile<span class="token punctuation">.</span>Workbook<span class="token punctuation">.</span>AddWorksheet<span class="token punctuation">(</span><span class="token string">&#39;VertGrid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,23),r=[n];function c(d,p){return o(),s("div",null,r)}const k=e(a,[["render",c],["__file","02-txlsworkbookeh-class.html.vue"]]);export{k as default};
