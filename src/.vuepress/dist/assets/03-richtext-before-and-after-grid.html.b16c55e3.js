import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,f as n}from"./app.ac77cf73.js";const a="/online-help-vuepress-hope/assets/clip0036.e7ba3d17.png",s={},i=n('<h1 id="rich-text-before-and-after-grid" tabindex="-1"><a class="header-anchor" href="#rich-text-before-and-after-grid" aria-hidden="true">#</a> Rich text before and after grid</h1><p><code>TPrintDBGridEh</code> allows to print/preview rich text before and after grid. Use <code>AfterGridText</code> and <code>BeforeGridText</code> to specify text. Using <code>SetSubstitutes</code> method you can substitute text in <code>BeforeGridText</code> and <code>AfterGridText</code> properties upon print/preview process.</p><p><code>TPrintDBGridEh</code> allows to print <code>Rich text</code> before and after grid. To do this, use <code>AfterGridText</code> and <code>BeforeGridText</code> properties. Also, using the method <code>SetSubstitutes</code>, you can specify the substitution text in the <code>BeforeGridText</code> and <code>AfterGridText</code> properties in print / preview. A property of <code>AfterGridText</code> and <code>BeforeGridText</code> have type <code>TStrings</code>, although store a data type <code>TRichEditStrings</code>.</p><p>Below is an example code for printing Rich text with the possibility of substitution:</p><p><img src="'+a+`" alt="" loading="lazy"></p><div class="language-pascal" data-ext="pascal"><pre class="language-pascal"><code>PrintDBGridEh1<span class="token punctuation">.</span>SetSubstitutes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;%[Today]&#39;</span><span class="token punctuation">,</span>DateToStr<span class="token punctuation">(</span>Now<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
PrintDBGridEh1<span class="token punctuation">.</span>Preview<span class="token punctuation">;</span>  
</code></pre></div>`,6),c=[i];function r(d,p){return t(),o("div",null,c)}const f=e(s,[["render",r],["__file","03-richtext-before-and-after-grid.html.vue"]]);export{f as default};
