import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,f as t}from"./app.ac77cf73.js";const e="/online-help-vuepress-hope/assets/clip0071.22bdce1c.png",o={},p=t(`<h1 id="show-hint-winow-for-planner-items" tabindex="-1"><a class="header-anchor" href="#show-hint-winow-for-planner-items" aria-hidden="true">#</a> Show Hint Winow for planner Items</h1><p>There are event in the <code>PlannerView</code> to set data for hint window (Hints) that appear when mouse you hover over the event item area.</p><div class="language-pascal" data-ext="pascal"><pre class="language-pascal"><code>OnSpanItemHintShow<span class="token punctuation">:</span> TPlannerViewSpanItemHintShowEventEh
</code></pre></div><dd><p>Write the event handler to change text, font or background color. The hint window is appeared when a mouse moves and hold over the event area (<code>TPlannerDataItemEh</code>).</p><p>In the below example the <code>OnSpanItemHintShow</code> handler adds a new line with text &#39;NewLine&#39; and sets the hint font in bold style.</p></dd><div class="language-pascal" data-ext="pascal"><pre class="language-pascal"><code><span class="token keyword">procedure</span> TfrFrameOne<span class="token punctuation">.</span>PlannerDayViewEh1SpanItemHintShow<span class="token punctuation">(</span>
  PlannerControl<span class="token punctuation">:</span> TPlannerControlEh<span class="token punctuation">;</span> PlannerView<span class="token punctuation">:</span> TCustomPlannerViewEh<span class="token punctuation">;</span>
  CursorPos<span class="token punctuation">:</span> TPoint<span class="token punctuation">;</span> SpanRect<span class="token punctuation">:</span> TRect<span class="token punctuation">;</span> InSpanCursorPos<span class="token punctuation">:</span> TPoint<span class="token punctuation">;</span>
  SpanItem<span class="token punctuation">:</span> TTimeSpanDisplayItemEh<span class="token punctuation">;</span> Params<span class="token punctuation">:</span> TPlannerViewSpanHintParamsEh<span class="token punctuation">;</span>
  <span class="token keyword">var</span> Processed<span class="token punctuation">:</span> Boolean<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">begin</span>
  PlannerControl<span class="token punctuation">.</span>DefaultFillSpanItemHintShowParams<span class="token punctuation">(</span>PlannerView<span class="token punctuation">,</span>
    CursorPos<span class="token punctuation">,</span> SpanRect<span class="token punctuation">,</span> InSpanCursorPos<span class="token punctuation">,</span> SpanItem<span class="token punctuation">,</span> Params<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Params<span class="token punctuation">.</span>HintStr <span class="token operator">:=</span> Params<span class="token punctuation">.</span>HintStr <span class="token operator">+</span> sLineBreak <span class="token operator">+</span> <span class="token string">&#39;NewLine&#39;</span><span class="token punctuation">;</span>
  Params<span class="token punctuation">.</span>HintFont<span class="token punctuation">.</span>Style <span class="token operator">:=</span> Params<span class="token punctuation">.</span>HintFont<span class="token punctuation">.</span>Style <span class="token operator">+</span> <span class="token punctuation">[</span>fsBold<span class="token punctuation">]</span><span class="token punctuation">;</span>
  Processed <span class="token operator">:=</span> <span class="token keyword">True</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span class="token punctuation">;</span>
</code></pre></div><p>On the screen the hint will appear as follows:</p><p><img src="`+e+'" alt="" loading="lazy"></p>',7),c=[p];function l(i,r){return a(),s("div",null,c)}const d=n(o,[["render",l],["__file","03-show-hint-winow-for-planner-items.html.vue"]]);export{d as default};
