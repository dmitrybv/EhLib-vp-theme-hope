import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as t,f as d}from"./app.ac77cf73.js";const i={},r=d('<h1 id="type-of-rows-and-type-of-data-in-rows-of-tdbvertgirdeh" tabindex="-1"><a class="header-anchor" href="#type-of-rows-and-type-of-data-in-rows-of-tdbvertgirdeh" aria-hidden="true">#</a> Type of rows and type of data in rows of TDBVertGirdEh</h1><p>Collection <code>DBVertGridEh.Rows</code> consists of elements of the collection <code>TFieldRowEh</code>. All lines have the same type - <code>TFieldRowEh</code>, but the kind of data displayed in each column is different, and depending on the type of field assignments through property <code>TFieldRowEh.FieldName</code>, as well as the combination of the properties assigned <code>Row</code>. For example, if the <code>DataSet</code> field is of <code>TBooleanField</code> type, in line instead of the text will display <code>Checkbox</code>. You can customize the properties of <code>Row</code> to display checkboxes for any other type of field, if you set the property to <code>True</code> <code>TFieldRowEh.Checkboxes</code> and fill in additional properties. The following instructions describe how to configure the properties of the string to achieve the desired display, behavior and form cell editor.</p><p>Access to the grid rows:</p><p>You can use these methods to a property of, and access to the columns of the grid: <code>property DBGridEh.Rows: TDBVertGridRowsEh</code> –</p><p>This is the main collection lines</p><p><code>property DBGridEh.FieldRows[const FieldName: String]: TFieldRowEh</code> Search row by a field name. If the string, which TFieldRowEh.FieldName = FieldName not found, an exception is thrown.</p><p><code>function FindFieldRow(const FieldName: String): TFieldRowEh;</code> Search row by a field name. If the row, which TFieldRowEh.FieldName = FieldName not found it returns Nil.</p><p><code>Columns</code> of data type <code>Combobox</code> editors and other features rows.</p><p>Other features of grid lines operate similar to how the columns operates in <code>DBGridEh</code>. They are described in detail in the section &quot;Types of columns and data types in DBGridEh».</p>',9),s=[r];function c(n,a){return o(),t("div",null,s)}const p=e(i,[["render",c],["__file","05-type-of-rows.html.vue"]]);export{p as default};
