import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,f as r}from"./app.ac77cf73.js";const a={},d=r('<h1 id="working-with-autoincrement-fields" tabindex="-1"><a class="header-anchor" href="#working-with-autoincrement-fields" aria-hidden="true">#</a> Working with AutoIncrement fields</h1><p><code>TMemTableEh</code> has an <code>AutoIncrement</code> property with <code>InitValue</code> and <code>Step</code> subproperties to work with fields which values are generated by automatic sequence numbers.</p><p>For such fields property <code>TField.AutoGenerateValue</code> must be <code>arAutoInc</code>. Values for such fields are generated automatically using internal counter when the new record is appeared in the internal array. Initial value of the counter is assigned by the <code>TMemTableEh.InitValue</code> property.</p><p>After inserting new record, a value of the counter increases on the number given by the <code>TMemTableEh.Step</code> property.</p><p>If <code>TMemTableEh</code> is connected to <code>DataDriver</code> then usually values of such fields are generated by the server. To cause <code>TMemTableEh</code> be able to get values of fields generated by the server, it is recommended to use <code>TMemTableEh</code> and <code>TSQLDataDriver</code> (or inherited from it) as follow: Set <code>InitValue</code> property and <code>Step</code> property to -1. <code>Values</code> of <code>AutoIncrement</code> fields will have negative values before sending the new record to the server.</p><p>Add parameters in <code>TSQLDataDriver.SpecParams</code> property to make <code>SQLDataDriver</code> be able to get values of <code>AutoIncrement</code> fields generated by the server.</p><p>List of parameters in <code>TSQLDataDriver.SpecParams</code> depends on the type of <code>Server</code> and will be described later. After updates are applied and record new writes to the server, <code>SQLDataDriver</code> will request new value of the counter from server and assign it to the <code>AutoIncrement</code> field on the client.</p>',7),c=[d];function n(i,s){return t(),o("div",null,c)}const h=e(a,[["render",n],["__file","05-working-with-auto-increment-fields.html.vue"]]);export{h as default};
