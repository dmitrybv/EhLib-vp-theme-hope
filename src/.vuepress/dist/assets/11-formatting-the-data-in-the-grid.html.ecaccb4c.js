import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,f as i}from"./app.ac77cf73.js";const d={},r=i('<h1 id="the-properties-for-formatting-the-data-in-the-grid" tabindex="-1"><a class="header-anchor" href="#the-properties-for-formatting-the-data-in-the-grid" aria-hidden="true">#</a> The properties for formatting the data in the grid</h1><p>Use the following properties of the grid column <code>TColumnEh</code> to format the data in the cell:</p><p><code>DisplayFormat: String</code></p><dd>The output format is a numerical value or a TDateTime value.</dd><br><p><code>EndEllipsis: Boolean</code></p><dd>Display ellipsis if the text does not fit in a cell grid</dd><br><p><code>Layout: TTextLayout</code></p><dd>Vertical text alignment</dd><br><p><code>Alignment: TAlignment</code></p><dd>Align text horizontally</dd><br><p><code>WordWrap: Boolean</code></p><dd>Wrap text if it is not fit to a cell in one row. The text will be moved if the row height (Row) greater than the height of one line of text.</dd><br><p><code>EditMask: String</code></p><dd>Mask text when editing the data in the cell. To correctly read the description of the filling properties of the standard properties TEditMask</dd><br>',20),a=[r];function n(h,l){return t(),o("div",null,a)}const s=e(d,[["render",n],["__file","11-formatting-the-data-in-the-grid.html.vue"]]);export{s as default};
