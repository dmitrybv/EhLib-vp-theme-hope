import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as t,f as i}from"./app.ac77cf73.js";const c={},s=i('<h1 id="tdbcomboboxeh-control" tabindex="-1"><a class="header-anchor" href="#tdbcomboboxeh-control" aria-hidden="true">#</a> TDBComboBoxEh control</h1><p><code>TDBComboBoxEh</code> component is an edit box with a scrollable drop-down list attached to it. User can select an item from the list or type it directly into the edit box.</p><p><code>TDBComboBoxEh</code> permits a single line and multiple line of text.</p><p>Use <code>WordWrap</code> property to set <code>TDBComboBoxEh</code> as multiple line editor.</p><p>Use <code>Items</code> property to access to the list of items (strings) in the list portion of the combo box.</p><p>Use <code>KeyItems</code> property to access to the list of items (strings) which will be stored in field when Items property is also assigned. When <code>Items</code> and <code>KeyItems</code> properties are filled, then <code>KeyList</code> property have to contain values which will be written in the field, but Items property, in corresponding indexes, has to contain values to display.</p><p>Use <code>Images</code> property to specify images that will be drawn in the drop-down list and image that will be drawn on the left side of <code>ComboBox</code>. Index of drawing image is taken from <code>ItemIndex</code> property.</p>',7),d=[s];function r(n,a){return o(),t("div",null,d)}const h=e(c,[["render",r],["__file","10-tdbcomboboxeh-control.html.vue"]]);export{h as default};
