import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as d,f as o}from"./app.ac77cf73.js";const a={},i=o('<h1 id="tdbdatetimeediteh-control" tabindex="-1"><a class="header-anchor" href="#tdbdatetimeediteh-control" aria-hidden="true">#</a> TDBDateTimeEditEh control</h1><p><code>TDBDateTimeEditEh</code> represents a single-line date or/and time edit control that can display and edit a date or/and time values.</p><p>Property <code>Kind</code> determines whether the component is a date editor or/and a time editor <code>(dtkDateEh, dtkTimeEh, dtkDateTimeEh)</code> or custom date-time mask editor <code>(dtkCustomEh)</code>.</p><p>Use <code>EditFormat</code> property to set custom date/time format. You can use next format elements: <code>&#39;YY&#39;, &#39;YYYY&#39;, &#39;MM&#39;, &#39;DD&#39;, &#39;HH&#39;, &#39;NN&#39;, &#39;SS&#39;</code>.</p><p>By default <code>TDBDateTimeEditEh</code> build edit mask using ShortDateFormat variable.</p><p>Edit mask can be by six types: three for four-char year - <code>&#39;MM/DD/YYYY&#39;, &#39;DD/MM/YYYY&#39;, &#39;YYYY/MM/DD&#39;</code> and three for two-char year <code>&#39;MM/DD/YY&#39;, &#39;DD/MM/YY&#39;, &#39;YY/MM/DD&#39;</code>.</p><p>Application can use <code>Text</code> (String type) and <code>Value</code> (Variant type) properties to get and set <code>DateTime</code> type value in <code>TDBDateTimeEditEh</code>. If <code>TDBDateTimeEditEh</code> has <code>dtkDateEh</code> type then it will change only date part of the field. If <code>TDBDateTimeEditEh</code> has <code>dtkTimeEh</code> type then it will change only time part of the field.</p>',7),c=[i];function r(n,h){return t(),d("div",null,c)}const l=e(a,[["render",r],["__file","08-tdbdatetimeediteh-control.html.vue"]]);export{l as default};
