import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as d,f as t}from"./app.ac77cf73.js";const c={},l=t('<h1 id="multiselect-and-clipboard-operations" tabindex="-1"><a class="header-anchor" href="#multiselect-and-clipboard-operations" aria-hidden="true">#</a> Multiselect and Clipboard Operations</h1><p><code>TVertDBGridEh</code> allows you to select the line and rectangular areas for further operations on the selected area (for example, for copying to the clipboard).</p><p>To enable multiple selection, set the following properties:</p><p><code>EditActions</code></p><dd>defines the actions a user can perform with a selected area (Copy, Cut, Delete, Paste, SelectAll).</dd><p><code>AllowedSelections</code></p><dd>determines the types of permitted allocation that can be performed in a grid user (vgstRowsEh, vgstRectangleEh, vgstAllEh).</dd><p><code>Selection</code></p><dd>It contains properties containing information about the selected area. </dd><br><p>The property is of type <code>TVertDBGridEh.Selection</code></p><p><code>TDBVertGridSelectionEh</code> and contains the following properties and methods.</p><p><code>property AnchorRowIndex: Integer</code></p><dd>Fixed line number in the allocation data of the rectangular area.</dd><p><code>property Rows: TFieldRowSelectionListEh</code></p><dd>List of lines in the allocation of full rows records.</dd><p><code>property SelectionType: TDBVertGridSelectionTypeEh</code></p><dd>Type selection </dd><p><code>property ShipRowIndex: Integer</code></p><dd>Number &quot;floating&quot; line in the allocation of the rectangular area data.</dd><p><code>function IsCellSelected(ACol, ARow: Integer): Boolean;</code></p><dd>Returns True if the cell gets in the selected area.</dd><p><code>procedure Clear;</code></p><dd>Clear selection. SelectionType = vgstNonEh.</dd><p><code>procedure SelectAll;</code></p><dd>Select the entire grid. SelectionType = vgstAllEh.</dd><p><code>procedure SelectAllDataCells;</code></p><dd>Select a rectangular area, so that it will get all the data cells.</dd><p>Use <code>TVertDBGridEh.Selection.SelectionType</code> property to determine the current view selection.</p><p><code>Selection.SelectionType</code> has <code>TDBVertGridSelectionTypeEh</code> type and can contain the following values</p><dl><dd><p><code>vgstRowsEh</code><dl><dd>Allocate a full-line recording. To access the recording, use a dedicated property Selection.Rows.</dd></dl></p><p><code>vgstRectangleEh</code></p><dl><dd>Select a square region of the data. For access to the borders of the area and use the properties of Selection.AnchorRowIndex Selection.ShipRowIndex.</dd></dl><p><code>vgstAllEh</code></p><dl><dd>Select the entire grid.</dd></dl><p><code>vgstNonEh</code></p><dl><dd>Multiple selection is absent.</dd></dl></dd></dl><p>The TVertDBGridEh.Selection.Rows property is of type TFieldRowSelectionListEh and contains the following properties and methods:</p><p><code>property Count: Integer </code></p><dd>It contains the number of selected lines.</dd><p><code>property Items[Index: Integer]: TFieldRowEh</code></p><dd>Pointers on selected lines</dd><p><code>procedure AddSelectedRow(ARow: TFieldRowEh);</code></p><dd>Adds a new line type TFieldRowEh the list of selected lines.</dd><p><code>procedure Clear;</code></p><dd>Clears the list of selected lines</dd><p><code>procedure RemoveSelectedRow(ARow: TFieldRowEh);</code></p><dd>Deletes the line type from the list TFieldRowEh selected lines.</dd><p><code>procedure SelectAll;</code></p><dd>Selects all lines in the TVertDBGridEh.</dd><p>When the user selects a rectangular area of data in the data grid on the allocation are stored in the properties and <code>Selection.AnchorRowIndex</code> <code>Selection.ShipRowIndex</code>. When a rectangular selection one cell always remains fixed and specifies anchor selection AnchorRowIndex. The second cell specifies <code>ShipRowIndex</code> second selection border. If the user presses and drags the mouse up or down, the value changes in <code>ShipRowIndex</code> property.</p>',45),r=[l];function n(i,a){return o(),d("div",null,r)}const h=e(c,[["render",n],["__file","09-multiple-choice-and-work-with-the-clipboard.html.vue"]]);export{h as default};
