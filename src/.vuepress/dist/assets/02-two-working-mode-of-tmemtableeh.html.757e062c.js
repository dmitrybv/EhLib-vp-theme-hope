import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as t,f as o}from"./app.ac77cf73.js";const d={},r=o('<h1 id="two-working-mode-of-tmemtableeh-component" tabindex="-1"><a class="header-anchor" href="#two-working-mode-of-tmemtableeh-component" aria-hidden="true">#</a> Two working mode of TMemTableEh component</h1><p>There are two working mode of <code>TMemTableEh</code>: ‘stand-alone’ and ‘with datadriver’.</p><h3 id="stand-alone-mode" tabindex="-1"><a class="header-anchor" href="#stand-alone-mode" aria-hidden="true">#</a> ‘stand-alone’ mode.</h3><p>In ‘stand-alone’ mode <code>TMemTableEh</code> works as independent array of data. Before working with such MemTable it is necessary to create an internal structure of record. For that it is necessary to create external fields (<code>TFields</code>) or field definitions in <code>TMemTableEh</code> and call <code>CreateDataSet</code> method (Or, at design-time, press ‘Create DataSet’ button in Fields editor window).</p><h3 id="with-datadriver-mode" tabindex="-1"><a class="header-anchor" href="#with-datadriver-mode" aria-hidden="true">#</a> &#39;with datadriver&#39; mode.</h3><p>The &#39;with datadriver&#39; mode is activated when <code>TMemTableEh.DataDriver</code> property is assigned. Internal array is created automatically on activation of MemTableEh. Structure of the fields is delivered by DataDriver component.</p>',6),n=[r];function i(c,s){return a(),t("div",null,n)}const l=e(d,[["render",i],["__file","02-two-working-mode-of-tmemtableeh.html.vue"]]);export{l as default};
